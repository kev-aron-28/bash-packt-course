Also a variable wit multiple variables into one

Also called indexed arrays or lists

- Creating an empty array
  -  declare -a myArray
  - myArray=()

- Store values
  values=(1 2 3 4 5 6)

Must be separedted by space

To acces is like any other programming language

To get all values

echo "${values[@]}"

Slice array

echo "${array[@]:1:2}"


Get the index of element
echo "${!array[@]}"


Operation on arrays
- Len ${#array[@]}
- Overrating values like any other programming language
- appending values array+=(1)
- Delete a value unset array[1]

# Provide inputs for arrays
- Direct style
- With command line arguments
- Store console ouput

1. Substring Replacement
## Replace first match
${var/pattern/replacement}
text="red apple red cherry"
echo "${text/red/green}"
# → green apple red cherry

## Replace all matches
${var//pattern/replacement}
echo "${text//red/green}"
# → green apple green cherry

## Delete match
${var/pattern/}
echo "${text/red/}
# →  apple red cherry   (first "red" removed)


2. Prefix Removal
## Shortest prefix match
${var#pattern}
file="report.txt"
echo "${file#*.}"
# → txt   (removes shortest prefix ending with ".")


## Longest prefix match
${var##pattern}
path="/home/user/docs/file.txt"
echo "${path##*/}"
# → file.txt   (removes everything up to last "/")

3. Suffix Removal
## Shortest suffix match
${var%pattern}
file="report.txt"
echo "${file%.*}"
# → report

## Longest suffix match

${var%%pattern}
path="archive.tar.gz"
echo "${path%%.*}"
# → archive   (removes longest suffix starting at first ".")



# Basic globbing rules

* ANy string 
? Exactly one character
[abc] any character in the set





























































